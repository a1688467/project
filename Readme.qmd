---
title: "Readme"
format: html
editor: visual
---

# Explaining the project

The data was from an experiment that looks at the effect a novel treatment has on gene expression with saline as a placebo. Additionally there were two cell lines used, application of a growth factor with different concentration varying between 0 and 10 mg/ml and six different types of cells.

This readme doesn't contain the full analysis or indepth looks at interesting stuff. It just explains how the project has progressed. The report.qmd and rendered versions have the IMRaD report that goes into detail. Karl requested EDA and the (fancy) interaction plot which use this data as well as sample size calculations for new data and a new model. All three of these things are included in this document while the EDA powerpoint is in the top level directory.

# Running the project

-   This project uses targets, targets and tarchetypes so ensure you have the requirements installed already. Rstudio is handy as a project file is provided. Additionally a chromium based browser is needed for the table generation.

-   Run the makefile before you do anything else.

-   Render this again too! And the report! Often targets plays up and needs the quatro parts commented out if it errors out about not finding the quatro binary.

-   This Readme won't show the executed code parts on Github, instead download and build the project then view the rendered files (this also applies to the report).

# Initial EDA

This was all part of Karl's requests.

No data was missing and we've cleaned up naming and stuff:

```{r}
pacman::p_load(tidyverse, targets, lme4, lmerTest, mixedup, gt, skimr)
tar_load(cleaned_data)
skimr::skim_without_charts(cleaned_data)
```

Let's look at the response:

![](figs/gene.svg)

We can see that it's quite right skewed, so a transform might be needed.

Now lets look at some combos, Karl wants to see if the treatment has an effect on gene expression and there's a bunch of other potential dependent variables:

Most aren't interesting or show no clear relationships (Cell-type and cell-line are related which makes things weirder) but here's a few that are good:

![](figs/geneVsConcByName.svg)

This shows that there are potential individual effects per name!

![](figs/geneVsConcByCell.svg)

This shows that it's not just the cell line (As there's no pattern), but the actual type!![](figs/geneVsConcByTreament.svg)

Here we see that it appears that treatment alone does not have a significant influence on gene expression with concentration.

![](figs/geneVsname.svg)

Name and gene expression alone certainly have individual effects which is good

![](figs/geneVsTreament.svg)

We see here that there is overlap in the IQR between the two which does indicate there might not be a significant difference alone.![](figs/geneVsTreatmentByCell.svg)

We see that treatment and cell-line have a strange interaction, wild-type loves the treatment but cell-type 101 doesn't care

## Karl's plot/interaction plot

Karl made us create this plot and it's actually the best at visualising stuff:

![](figs/interactionPlot.svg)

That there is certainly individual effects coming from the name of the cell-line. Additionally for many of the wild-type, there is a clear relationship between treatment and gene-expression which shows there might be a three-way interaction.

# Modelling

We see from that there's probably individual effects as well as lots of possible interaction (including three-way interaction) and let's use see if a mixed-effects model works since experimentally it makes sense. We'll start with a simple no interaction model and use ranova to see if the random intercept is useful (force a lme4 model since lmerTest takes over the default lmer function and it's only useful for some stuff):

```{r}
base_model <- lme4::lmer(gene_expression ~ conc+cell_line+treatment+(1|name), data = cleaned_data)
ranova(model = base_model) 
```

We can see from this that the random intercept is important, there are individual effects.

So let's start with a threeway interaction model with a random intercept for name and see if it can be reduced using step! Importantly, we need to make the difficult decisions around lower order effects if they're not significant but the higher order ones are. Due to the principle of marginality and the potential to induce bias then I'll be likely keeping non-significant terms in.

Again, we use step to find the best model from our threeway interaction, by default it's backwards so it's removing terms

```{r}
tar_load(threeway_model)
mixedup::summarise_model(threeway_model)
```

As seen in here, we keep the 3-way interaction coefficient. However I'm worried about the insignificance of the lower order terms. Let's do a model without the 3-way interaction, again using backwards steps to remove coefficients:

```{r}
tar_load(twoway_model)
mixedup::summarise_model(twoway_model)
```

Here treatment is not significant. While I doubt it's actually better, let's try a no interaction model.

```{r}
tar_load(simple_model)
mixedup::summarise_model(simple_model)
```

This has actually removed treatment fully, leaving only concentration. This doesn't seem correct since we clearly saw the interaction was significant.

Let's compare the three using AIC/ANOVA:

```{r}
anova(simple_model, twoway_model, threeway_model, refit=FALSE)
```

![](tabs/AIC_table.png)

AIC wants the three-way interaction model and the anova rules out the simple model (as we expected!) while also picking the three-way over the two-way.

So let's stick with the three way, it's AIC is quite a bit lower although explaining the interaction between treatment, concentration and cell_line will be annoying (the two way model was much simpler as it didn't even include the cell_line! Although the plot does show that there is some effect from this.

Importantly, the imerTest package often uses global state so to work with targets we've had to add a workaround in the clean_data file. It's documented there and in \_targets as well.

# Final model

Coefficients include lots of non-significant lower order ones:

![](tabs/coef_table.png)

We need to check the assumptions so lets also do that:

![](figs/assumptions_model.svg)

The residuals vs fitted are not great

The QQ is good for the middle values which might be the issue

The scale location plot is confusing, but if we ignore the outlines it's passable

Residual vs leverage is fine, vertical lines are due to factor levels rather than continous predictors

We could do more assumptions checking but I'm happy enough with this

## Sample size for new data/model

Karl asked us for a sample size calculation for some new data and a new model for a publication:

```{r}
tar_load(new_model_sample_size)
new_model_sample_size
```

# Appendix

```{r}
here::here()
```
